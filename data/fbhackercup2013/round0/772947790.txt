#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <map>

using namespace std;

const int MAXL = 101010, inf = 1023456789;

int T, n, k, a, b, c, r;
long long m[MAXL], m2[MAXL];

int d = 0;

int main () {
	scanf("%d", &T);

	for (int t = 1; t <= T; t++) {
		scanf("%d %d %d %d %d %d", &n, &k, &a, &b, &c, &r);
		map<long long, int> has;
		m[0] = a;
		has[a] = 1;
		for (int i = 1; i < k; i++) {
			m[i] = (b * m[i - 1] + c) % r;
			if (has.find(m[i]) == has.end()) {
				has[m[i]] = 1;
			} else {
				has[m[i]]++;
			}
		}
		// next k+1 things repeat
		long long next = 0;
		for (int i = 0; i <= k; i++) {
			while (has.find(next) != has.end() && has[next] > 0) {
				next++;
			}
			long long rem = (i > 0 ? m[i - 1] : inf);
			has[rem]--;
			if (has[rem] > 0) {
				rem = inf;
			}
			m2[i] = min(rem, next);
			if (has.find(m2[i]) == has.end()) {
				has[m2[i]] = 1;
			} else {
				has[m2[i]]++;
			}
			if (d) printf("%lld (%lld) ", m2[i], rem);
		}
		if (d) printf("\n");
		n -= k;
		n--;
		n %= (k + 1);
		printf("Case #%d: %lld\n", t, m2[n]);
	}

	return 0;
}
