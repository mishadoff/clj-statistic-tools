#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string>
#include <cstring>
#include <fstream>
#include <cassert>
using namespace std;

#define all(o) (o).begin(), (o).end()
#define allr(o) (o).rbegin(), (o).rend()
const int INF = 2147483647;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
template <class T> int size(T x) { return x.size(); }

// assert or gtfo

int main()
{
	int ts;
	scanf("%d\n", &ts);
	for (int t = 0; t < ts; t++)
	{
		string line;
		getline(cin, line);
		map<int, int> cntz;

		for (int i = 0, cnt = size(line); i < cnt; i++)
		{
			char c = line[i];
			if (c >= 'A' && c <= 'Z') cntz[c - 'A']++;
			else if (c >= 'a' && c <= 'z') cntz[c - 'a']++;
		}

		vector<int> cn;
		for (map<int, int>::const_iterator it = cntz.begin(); it != cntz.end(); it++)
		{
			cn.push_back(it->second);
		}

		sort(all(cn));

		int res = 0;
		for (int i = size(cn) - 1, j = 26; i >= 0; i--, j--)
		{
			res += cn[i] * j;
		}

		printf("Case #%d: %d\n", t+1, res);
	}
	return 0;
}