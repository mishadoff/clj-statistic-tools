#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstdio>
#include<cstring>
#include<queue>
using namespace std;
#define ll long long
#define N 100005

ll m[N];
int cir[N];
struct pnt{
    int num;
    pnt(){};
    pnt(int _num){
        num=_num;
    }
    bool operator < (const pnt &a) const{
        return a.num<num;
    }
}node[N];

int main(){
   // freopen("in.txt","r",stdin);
   // freopen("out.txt","w",stdout);
    int t,cas=1;
    cin>>t;
    while(t--){
        ll n,k,a,b,c,r;
        scanf("%lld%lld%lld%lld%lld%lld",&n,&k,&a,&b,&c,&r);
        memset(node,0,sizeof(node));
        m[0]=a;
        for(int i=1;i<k;i++) m[i]=(b*m[i-1]+c)%r;
        for(int i=0;i<k;i++) if(m[i]<=k) node[m[i]].num++;
        priority_queue<pnt>q;
        for(int i=0;i<=k;i++) if(!node[i].num) q.push(pnt(i));
        m[k]=q.top().num;
        for(int i=0;i<=k;i++){
            cir[i]=q.top().num;
            q.pop();
            node[cir[i]].num++;
            if(m[i]<=k){
                node[m[i]].num--;
                if(!node[m[i]].num) q.push(pnt(m[i]));
            }
        }
        printf("Case #%d: %d\n",cas++,cir[(n-1-k)%(k+1)]);
    }
    return 0;
}
