#include <cstdio>
#include <stack>
#include <cstring>

using namespace std;

#define L 100

char str[L+1];

bool solve() {
    stack<int> open, osmile, csmile;
    
    int len = strlen(str);
    
    for (int i = 0; i < len; i++) {
        char ch = str[i];
        
        if (('a' <= ch && ch <= 'z') || (ch == ' ') || (ch == ':') || (ch == '(') || (ch == ')')) {
            if (ch == ')' || ch == '(') {
                if (i > 0 && str[i-1] == ':') {
                    // Smiley
                    if (ch == ')')
                        csmile.push(i);
                    else
                        osmile.push(i);
                }
                else {
                    // Normal bracket
                    if (ch == '(') {
                        open.push(i);
                    }
                    else {
                        // ch is ')'
                        if (!open.empty()) {
                            open.pop();
                        }
                        else {
                            // Try osmile
                            if (!osmile.empty() && osmile.top() < i) {
                                osmile.pop();
                            }
                            else {
                                return false;
                            }
                        }
                    }
                }
            }
        }
        else {
            return false;
        }
    }
    
    // Remaining brackets should be balanced
    while (!open.empty()) {
        int t = open.top();
        
        if (!csmile.empty() && (csmile.top() > t)) {
            open.pop();
            csmile.pop();
        }
        else {
            return false;
        }
    }
    
    if (open.empty())
        return true;
    
    return false;
}

int main() {
    int t;
    scanf("%d", &t);
    for (int i = 1; i <= t; i++) {
        scanf(" %[^\n]", str);
        
        if (solve()) {
            printf("Case #%d: YES\n", i);
        }
        else {
            printf("Case #%d: NO\n", i);
        }
    }
    return 0;
}

