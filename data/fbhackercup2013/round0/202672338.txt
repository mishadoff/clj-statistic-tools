#include <iostream>
#include <cstring>
#include <cstdio>
#include <sstream>
using namespace std;

//{{{Commonly used macro in topcoder
//-----------------------By cylixstar-----------------------//
#define REP(i, n) for (int n_##__LINE__= (n), i = 0; i < n_##__LINE__; ++i)
#define FOR(i, f, t) for (__typeof__(f) f_##__LINE__=(f), t_##__LINE__=(t), i = f_##__LINE__; i <= t_##__LINE__; ++i)
#define TR(c, it) for (__typeof__((c).begin()) it = (c).begin(); it != (c).end(); ++it)
#define ALL(c) (c).begin(), (c).end()
#define SZ(a) ((int)(a).size())
#define CLR(a, v) do { memset(a, v, sizeof(a)); } while(0)
#define DBG(a) do { std::cout << "[" << __FUNCTION__ << "]" << #a << ": " << a << endl; } while(0)

template<typename T>
inline void checkMax(T& a, const T& b) {
  if (a < b) a = b;
}

template<typename T>
inline void checkMin(T& a, const T& b) {
  if (a > b) a = b;
}

template<typename T>
T string2int(const string& s) {
  T ret;
  istringstream ins(s);
  ins >> ret;
  return ret;
}

template<typename T>
string int2string(T val) {
  ostringstream os;
  os << val;
  return os.str();
}

//}}}


const int kMaxLen = 100 + 10;
bool ok[kMaxLen][kMaxLen];
string seq;

int main() {
  int tc;
  cin>>tc;
  getline(cin, seq);
  for (int case_num = 1; case_num <= tc; ++case_num)  {
    CLR(ok, 0);
    getline(cin, seq);
    int total_len = SZ(seq);
    for (int len = 1; len <= total_len; ++len) {
      REP (i, total_len - len + 1) {
        int j = i + len - 1;
        if (len == 1) {
          ok[i][i] = (isalpha(seq[i]) || (seq[i] == ':') || isspace(seq[i]));
          continue;
        }
        if (len == 2) {
          //DBG("Here");
          //DBG(seq[i]);
          //DBG(seq[j]);
          ok[i][j] = (ok[i][i] && ok[j][j]) || (seq[i] == ':' && (seq[j]=='(' || seq[j] == ')'))
            || (seq[i] == '(' && seq[j] == ')');
          continue;
        }
        FOR (k, i, j - 1) {
          if (ok[i][k] && ok[k + 1][j]) {
            ok[i][j] = true;
            break;
          }
        }
        ok[i][j] = ok[i][j] || (seq[i] == '(' && seq[j] == ')' && ok[i + 1][j - 1]);
      }
    }
    printf("Case #%d: %s\n", case_num, ok[0][total_len - 1] ? "YES" : "NO");
  }
  return 0;
}
