#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <sstream>

using namespace std;
typedef long long LL;

vector<LL> read_nums(istream& is){
    string str;
    getline(is, str);
    stringstream ss(str);
    vector<LL> res;
    while(!ss.eof()){
        LL n;
        ss >> n;
        res.push_back(n);
    }
    return res;
}

int solve(const string& str){
    vector<int> counts(128);
    for(size_t i = 0; i < str.size(); i++){
        char c = str[i];
        if(c == ' ') continue;
        if('A' <= c && c <= 'Z') counts[c]++;
        if('a' <= c && c <= 'z') counts[c - ('a' - 'A')]++;
    }
    sort(counts.begin(), counts.end(), greater<int>());
    int res = 0;
    for(int i = 0; i < 26; i++){
        res += (26 - i) * counts[i];
    }
    return res;
}


int main(){
    vector<LL> nums = read_nums(cin);
    int N = nums[0];
    for(int n = 1; n <= N; n++){
        string str;
        getline(cin, str);
        int res = solve(str);
        cout << "Case #" << n << ": " << res << endl;
    }
    return 0;
}

