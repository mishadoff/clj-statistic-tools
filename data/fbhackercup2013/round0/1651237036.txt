#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <string.h>
#include <string>
#include <map>

using namespace std;

const int MAXK = 220000;

int n, k, rr;
long long bb, cc;
int m[MAXK];
map <int,int> mp;

int Work()
{
	cin >> n >> k;
	cin >> m[0] >> bb >> cc >> rr;
	
	for (int i = 1; i < k; i ++)
		m[i] = (bb * m[i-1] + cc) % rr;

	mp.clear();
	for (int i = 0; i < k; i ++)
		if (m[i] <= k + 100)  mp[m[i]] ++;

	for (int i = k, j = 0, lt = 0; i <= k * 2; i ++)
	{
		if (lt <= j && (mp.find(lt) == mp.end() || mp[lt] == 0))
			m[i] = lt;
		else 
		{
			for (; !(mp.find(j) == mp.end() || mp[j] == 0); j ++);
			m[i] = j;
		}
		mp[m[i]] ++;
		mp[m[i-k]] --;  lt = m[i-k];
	}
	
	return m[(n-1-k)%(k+1)+k];
}

int main()
{
	freopen("find_the_mintxt.txt", "r", stdin);
	freopen("find_the_mintxt_output.txt", "w", stdout);

	int T;
	cin >> T;
	for (int tt = 1; tt <= T; tt ++)
		cout << "Case #" << tt << ": " << Work() << endl; 

	return 0;
}