#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
using namespace std;
const long long maxn = 200100;
long long cas;
long long a, b, c, r, n, k;
long long m[maxn], cnt[maxn];
set<long long> s;

int main() {
    freopen("a.in", "r", stdin);
    freopen("a.out", "w", stdout);
    scanf("%lld", &cas);
    for (long long Cas = 1; Cas <= cas; Cas++) {
        scanf("%lld%lld%lld%lld%lld%lld", &n, &k, &a, &b, &c, &r);
        s.clear();
        for (long long i = 0; i <= k; i++) s.insert(i);
        memset(cnt, 0, sizeof (cnt));
        m[0] = a;
        for (long long i = 1; i < k; i++)
            m[i] = (b * m[i - 1] + c) % r;
        for (long long i = 0; i < k; i++)
            if (m[i] <= k) {
                cnt[m[i]]++;
                if (s.find(m[i]) != s.end()) s.erase(m[i]);
            }
        for (long long i = k; i <= 2 * k + 5 && i < n; i++) {
            m[i] = *s.begin();
            if (m[i - k] <= k) {
                cnt[m[i - k]]--;
                if (cnt[m[i - k]] == 0) s.insert(m[i - k]);
            }
            if (m[i] <= k) {
                cnt[m[i]]++;
                if (s.find(m[i]) != s.end()) s.erase(m[i]);
            }
        }
        long long ans;
        if (n - 1 <= 2 * k + 5) ans = m[n - 1];
        else ans = m[(n - 1) % (k + 1)+(k + 1)];
        printf("Case #%lld: %lld\n", Cas, ans);
    }
    return 0;
}