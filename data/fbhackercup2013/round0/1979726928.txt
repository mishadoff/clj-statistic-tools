#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <bitset>
#include <deque>
using namespace std;

#define F first
#define S second
#define MP make_pair
#define PB push_back
#define rep( i , a , b )  for( int i = (a) ;   i <= (b) ; ++i)
#define foreach(c , itr) for(__typeof((c).begin()) itr = (c).begin(); itr != (c).end(); ++itr)
#define SZ(x) (int)x.size()
#define LEN(x) (int)x.length()


int dp[100+10][100+10];
string s;

inline bool can1( int x ) {
    return s[x]>='a'&&s[x]<='z'||s[x]==' '||s[x]==':' ; 
}

inline bool can2( int x, int y ){
    if( s[x] == '('&& s[y]==')') return true; 
    if( s[x] == ':' && s[y]==')') return true;
    if( s[x]==':' && s[y]=='(') return true;
    return false; 
}



int gao( int x, int y ){ 
    if( x > y ) return 1;
    if(dp[x][y]!=-1) return dp[x][y];  
    dp[x][y]=0; 
    if( x == y ) return dp[x][y]= can1(x) ; 
    
    for(int i=x; i < y ; ++i)
        dp[x][y] |= ( gao(x,i) && gao(i+1,y)) ;
    if( x + 1 == y ) dp[x][y] |= can2(x,y) ;  

    if( s[x] =='(' && s[y] ==')') dp[x][y] |= gao(x+1,y-1) ; 
    return dp[x][y]; 
}

int main (){
    freopen("b.in","r",stdin);
    freopen("b.out","w",stdout) ;  

    int T ;  
    scanf ("%d\n",&T) ; 
    for (int Cas = 1 ; Cas <= T ; ++Cas) { 
        char ss[1000];  
        gets(ss) ;  
        s = string( ss )  ; 
        memset(dp,0xff,sizeof(dp)) ;  
        cout <<"Case #"<<Cas<<": "; 
        puts(gao(0,LEN(s)-1)?"YES":"NO") ;
    }
    return 0; 
}
