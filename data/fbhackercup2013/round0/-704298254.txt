#include <functional>/*{{{*/
#include <algorithm>
#include <iostream>
#include <sstream>
#include <numeric>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <cmath>
#include <stack>
#include <list>
#include <map>
#include <set>
using namespace std;typedef long long ll;typedef long double real;void run();int main(){ios::sync_with_stdio(0);run();}/*}}}*/

ll m[400002];
void gen(ll a,ll b,ll c,ll r,ll k){
  m[0]=a;
  set<ll> dave;
  map<ll,int> hits; hits[a]=1;
  for (int i=0; i<=k+4; i++) dave.insert(i);
  for (int i=1; i<k; i++){
    m[i]=(m[i-1]*b+c)%r;
    dave.erase(m[i]);
    ++hits[m[i]];
  }
  for (int i=k; i<(k+4)*3; i++){
    dave.erase(m[i]=*dave.begin());
    ++hits[m[i]];
    if (not --hits[m[i-k]]){
      dave.insert(m[i-k]);
    }
  }
}

void run(){
  int tsts; cin>>tsts; for (int tst=1; tst<=tsts; ++tst){
    ll n,k; ll a,b,c,r; cin>>n>>k>>a>>b>>c>>r; gen(a,b,c,r,k); --n;
//    for (int i=0; i<k*3; i++) if (i%k<50) cout<<" "<<m[i]<<(((i+1)%k) and ((i+1)%k!=50)?"":"\n");
    ll res;
    if (n<(k+1)*2) res=m[n]; else{
      ll zero=k*2; while (m[zero]) ++zero;
      res=m[zero+((n-zero)%(k+1))];
      res=m[(k+1)*2+(n%(k+1))];
    }
    cout<<"Case #"<<tst<<": "<<res<<endl;
  }
}

