#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <string.h>
#include <string>

using namespace std;

const int MAXN = 110;

string ss;
int f[MAXN][MAXN];

int Dp(int l, int r)
{
	if (f[l][r] != -1)  return f[l][r];
	if (l > r)  return f[l][r] = 1;
	if (l == r)
	{
		if (ss[l] == ' ' || ss[l] == ':' || (ss[l] >= 'a' && ss[l] <= 'z')) 
			return f[l][r] = 1;
		return f[l][r] = 0;
	}
	if (l + 1 == r)
	{
		if (ss[l] == ':' && (ss[r] == '(' || ss[r] == ')'))
			return f[l][r] = 1;
	}
	if (ss[l] == '(' && ss[r] == ')')
		if (Dp(l + 1, r - 1) == 1)
			return f[l][r] = 1;

	for (int i = l; i < r; i ++)
		if (Dp(l, i) == 1 && Dp(i + 1, r) == 1)
			return f[l][r] = 1;
	return f[l][r] = 0;
}

bool Work()
{
	getline(cin, ss);	
	memset(f, 0xff, sizeof(f));
	return Dp(0, ss.length() - 1);
}

int main()
{
	freopen("balanced_smileystxt.txt", "r", stdin);
	freopen("balanced_smileystxt_output.txt", "w", stdout);

	ios::sync_with_stdio(false);

	int T;
	cin >> T;
	getline(cin, ss);
	for (int tt = 1; tt <= T; tt ++)
		cout << "Case #" << tt << ": " << (Work()? "YES": "NO") << endl;

	return 0;
}