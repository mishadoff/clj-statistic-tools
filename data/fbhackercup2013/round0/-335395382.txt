#!/usr/bin/env python
# Bill Cooperman (aquamongoose)
# 2013 Facebook Hacker Cup - Qualification Round
# Problem 2: "Balanced Smileys"

MAXN = 110

can = []
s = []

def possible(n, cur):
    if n == len(s):
        return (cur == 0)
    if cur < 0:
        return False
    if can[n][cur] != -1:
        return can[n][cur]

    if s[n] == '(':
        can[n][cur] = possible(n+1, cur+1)
    elif s[n] == ')':
        can[n][cur] = possible(n+1, cur-1)
    elif s[n] == '[':
        can[n][cur] = (possible(n+1, cur) or possible(n+1, cur+1))
    else:
        can[n][cur] = (possible(n+1, cur) or possible(n+1, cur-1))

    return can[n][cur]
    

def solve(line):
    global s, can

    line = line.replace(":(", "[")
    line = line.replace(":)", "]")

    s = []
    can = [[-1 for i in range(MAXN)] for j in range(MAXN)]

    for c in line:
        if c in "()[]":
            s.append(c)

    if possible(0, 0):
        return "YES"
    return "NO"
    

T = int(input())

for i in range(T):
    print("Case #{}: {}".format(i+1, solve(input())))

