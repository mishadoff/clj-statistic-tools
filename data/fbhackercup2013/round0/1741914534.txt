#include <iostream>
#include <algorithm>
#include <map>
#include <climits>
#include <vector>
#include <set>
using namespace std;
#define mp(a,b) make_pair(a,b)

int solve(long long N,long long K,long long A,long long B,long long C,long long R){
	int LS = 4*K;
	vector<long long> m(LS,-1);
	m[0] = A;
	for(int i = 1 ; i < K ; i++){
		m[i] = ( B * m[i-1] + C ) % R;
	}
	map<long long,int> S;
	set<long long> V;
	for(int i = 0 ; i < 1000000 ; i++)
		V.insert(i);
	
	long long cnt = 0;
	for(int i = 0 ; i < K ; i++){
		S[m[i]]++;
		V.erase(m[i]);
	}
	for(int i = K ; i < LS ; i++){
		m[i] = *V.begin();
		S[m[i]]++;
		if( --S[m[i-K]] == 0 ) V.insert(m[i-K]);
		V.erase(m[i]);
	}
	N--;
	if( N < LS ){
		return m[N];
	}else{
		int LEN = 1;
		while( m[LS-1-LEN] != m[LS-1] ) LEN++;
		N -= (LS-LEN);
		N %= LEN;
		return m[LS-LEN+N];
	}
}

int main(){
	int n;
	cin >> n;
	string s;
	getline(cin,s);
	for(int i = 0 ; i < n ; i++){
		long long N,K,A,B,C,R;
		cin >> N >> K >> A >> B >> C >> R;
		cout << "Case #" << i+1 << ": " << solve(N,K,A,B,C,R) << endl;
	}
}