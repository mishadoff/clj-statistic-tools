/* by Ashar Fuadi [fushar] */

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cmath>

#include <set>
#include <map>
#include <list>
#include <queue>
#include <vector>
#include <string>
#include <utility>
#include <iostream>
#include <algorithm>

using namespace std;

#define REP(i,n) for (int i = 0; i < (int)n; i++)
#define FOR(i,a,b) for (int i = (int)a; i <= (int)b; i++)
#define RESET(c,v) memset(c, v, sizeof(c))
#define FOREACH(i,c) for (typeof((c).end()) i = (c).begin(); i != (c).end(); ++i)

typedef long long ll;

#define pb push_back
#define mp make_pair

int T, N;
bool dp[105][105];
char s[105];

int main()
{
	scanf("%d\n", &T);
	REP(tc, T)
	{
		gets(s+1);
		N = strlen(s+1);
		RESET(dp, false);
		
		for (int i = 1; i <= N; i++)
			dp[i][i-1] = true;
		
		for (int i = N; i >= 1; i--)
		for (int j = i; j <= N; j++)
		{
			if (i==j && (s[i]==' ' || s[i]==':' || ('a' <= s[i] && s[i] <= 'z')))
			{
				dp[i][j] = true;
				continue;
			}
			if (i+1 == j && s[i]==':' && (s[j]==')' || s[j]=='('))
			{
				dp[i][j] = true;
				continue;
			}
			
			if (s[i]=='(' && s[j]==')')
				dp[i][j] |= dp[i+1][j-1];
			
			for (int k = i; k < j; k++)
				dp[i][j] |= dp[i][k] & dp[k+1][j];
		}
		
		printf("Case #%d: %s\n", tc+1, dp[1][N] ? "YES" : "NO");
	}
}
