#pragma comment(linker, "/STACK:16777216")
#pragma warning(disable:4786)

#include <set>
#include <map>
#include <list>
#include <cmath>
#include <stack>
#include <queue>
#include <deque>
#include <ctime>
#include <bitset>
#include <vector>
#include <cstdio>
#include <cctype>
#include <string>
#include <utility>
#include <cstring>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <numeric>
#include <iterator>
#include <iostream>
#include <algorithm>
#include <functional>

using namespace std;

#define MAX_SIZE 100100
#define MAX_LENGTH 100100
#define INF ( 1 << 29 )

#define CLR( a ) memset( a , NULL , sizeof( a ) )
#define MEM( a ) memset( a , -1 , sizeof( a ) )
#define fort( a , b ) for( ind = ( a ) ; ind <= ( b ) ; ind++ )
#define foriab( a , b ) for( i = ( a ) ; i < ( b ) ; i++ )
#define fori( a ) for( i = 0 ; i < ( a ) ; i++ )
#define forj( a ) for( j = 0 ; j < ( a ) ; j++ )
#define print1( a ) printf( "%d ---\n" , ( a ) )
#define print2( a , b ) printf( "%d %d ---\n" , ( a ) , ( b ) )

typedef long long lll ;

int MIN( int a , int b ) { return a < b ? a : b ; }
int MAX( int a , int b ) { return a > b ? a : b ; }
int GCD( int a , int b ) { while( b ) b ^= a ^= b ^= a %= b ; return a ; }
int LCM( int a , int b ) { return a * ( b / GCD( a , b ) ) ; }
void SWAP( int &a , int &b ) { a = a ^ b ; b = a ^ b ; a = a ^ b ; }

const double PI = acos( -1 ) ;
const double EPS = 1e-11 ;

struct st {
    int id , v ;
    bool operator () ( const st &a , const st &b ) {
        return a.v > b.v ;
    }
} brr[ MAX_LENGTH ] , cmp ;

char arr[ MAX_LENGTH ] ;

int main() {
    freopen( "a.in" , "r" , stdin ) ;
	freopen( "out.txt" , "w" , stdout ) ;
	int T , res , n , i , ind , cn , a , b , c ;
	char ch ;
	scanf( "%d" , &T ) ;
	getchar() ;
	fort( 1 , T ) {
        CLR( arr ) ;
		gets( arr ) ;
		n = strlen( arr ) ;
		res = 0 ;
		cn = 0 ;
		fori( MAX_LENGTH ) {
		    brr[ i ].v = 0 ;
		    brr[ i ].id = i ;
		}
		fori( n ) {
		    ch = tolower( arr[ i ] ) ;
		    if( ch >= 'a' && ch <= 'z' ) {
		        a = ch - 'a' + 1 ;
		        brr[ a ].v++ ;
		    }
		}
		sort( brr + 1 , brr + 27 , cmp ) ;
		a = 26 ;
		for( i = 1 ; i <= 27 ; i++ ) {
		    if( brr[ i ].v ) {
		        res += ( a * brr[ i ].v ) ;
                a-- ;
		    }
		}
		printf( "Case #%d: %d\n" , ind , res ) ;
	}
	return 0 ;
}
