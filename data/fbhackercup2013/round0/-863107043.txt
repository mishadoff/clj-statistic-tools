//Template

// By Anudeep :)
//Includes
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;

//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vs;
typedef pair< int ,int > pii;
typedef vector <ll> vll;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)
#define debug 0
#define sdebug 0
#define N 128

//String Utilities 
bool isl(char c) { return (c>='a' && c<='z'); }
bool isu(char c) { return (c>='A' && c<='Z'); }
bool isa(char c) { return (isl(c) || isu(c)); }
bool isn(char c) { return (c>='0' && c<='9'); }
bool isan(char c) { return (isa(c) || isn(c)); }
bool isv(char c) { return (c=='a' || c=='e' || c=='i' || c=='o' || c=='u'); }
string tolow(string s) { rep(i,s.ln) if(isu(s[i])) s[i]=s[i]-'A'+'a'; return s; }
string toup(string s) { rep(i,s.ln) if(isl(s[i])) s[i]=s[i]-'a'+'A'; return s; }

//It all starts here ;)
string str;
int dp[N][N];
int solve(int s,int e) {
	if(debug) printf("Solve %d %d %c\n",s,e,str[s]);
	int &ret = dp[s][e];
	if( ret != -1 ) return dp[s][e];
	if(s == e) return ret = 1;
	if(e == s+1) {
		ret = 0;
		if(str[s] >= 'a' && str[s] <='z') ret = 1;
		else if(str[s] == ' ' || str[s] == ':') ret = 1;
		if(debug) printf(" Return is %d\n",ret);
		return ret;
	}
	if(e == s+2) {
		if(str[s]==':')
			if(str[s+1]==')' || str[s+1]=='(') {
				if(debug) printf(" Return is %d\n",ret);
				return ret = 1;
			}
	}
	
	for(int i=s+1;i<e;i++)  {
		if(str[s] == '(') {
			if(str[i] != ')') continue;
			if(solve(s+1,i)==1 && solve(i+1,e)==1) {
				if(debug) printf(" Return is %d\n",ret);
				return ret = 1;
			}
		}
		else if(solve(s,i)==1 && solve(i,e)==1) {
			if(debug) printf(" Return is %d\n",ret);
			return ret = 1;
		}
	}
	if(debug) printf(" Return is %d\n",ret);
	return ret = 0;
}
	
int main() {
	int t,testno=0;
	char temp[N];
	scanf("%d",&t);
	getchar();
	getchar();
	while(t--) {
		gets(temp);
		if(sdebug) printf("%s\n",temp);
		str = string(temp);
		if(debug) cout << str << endl;
		memset(dp,-1,sizeof(dp));
		printf("Case #%d: ",++testno);
		if(solve(0,str.ln)) printf("YES\n");
		else printf("NO\n");
	}
	return 0;
}