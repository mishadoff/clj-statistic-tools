import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;


public class BalancedSmileys {
	public static void main(String[] args) throws NumberFormatException, IOException {
		File input = new File("second.in");
		FileReader reader = new FileReader(input);
		BufferedReader bReader = new BufferedReader(reader);
		bReader.readLine();
		String str;
		BufferedWriter writer = new BufferedWriter(new FileWriter(new File("second_out.out")));
		int o = 0;
		while ((str = bReader.readLine()) != null) {
			boolean isBalanced = isBalanced(str);
			writer.append(String.format("Case #%d: %s\n", o + 1, isBalanced ? "YES": "NO"));
			o++;
		}
		bReader.close();
		writer.flush();
		writer.close();
	}

	private static int [][]vis;
	private static int n;
	private static String s;
	private static boolean isBalanced(String str) {
		vis = new int[str.length()][str.length()];
		n = str.length();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) { 
				vis[i][j] = 0;
			}
		}
		s = str;
		return dp(0, n - 1) == 1;
	}
	private static int dp(int i, int j) {
		if (i > j) {
			return 1;
		}
		if (vis[i][j] != 0) {
			return vis[i][j];
		}
		if (s.charAt(i) == '(' && s.charAt(j) == ')' && dp(i + 1, j - 1) == 1) {
			return vis[i][j] = 1;
		}
		if (i < n - 1 && s.charAt(i) == ':' && (s.charAt(i + 1) == ')' || s.charAt(i + 1) == '(') && dp(i + 2, j) == 1) {
			return vis[i][j] = 1;
		}
		if (s.charAt(i) == ')') {
			return vis[i][j] = -1;
		}
		if (s.charAt(i) == '(') {
			for (int k = i + 1; k < j; k++) {
				if (dp(i, k) == 1 && dp(k + 1, j) == 1) {
					return vis[i][j] = 1;
				}
			}
			return vis[i][j] = -1;
		}
		return vis[i][j] = (dp(i + 1, j) == 1 ? 1 : -1);
	}
}
