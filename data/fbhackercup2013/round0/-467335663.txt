#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <algorithm>
#include <utility>
#include <map>
#include <set>
using namespace std;

typedef long long int64;

void solve_case()
{
    int N = 200010;
    int m[N], n, k, a, b, c, r;
    scanf("%d%d", &n, &k);
    scanf("%d%d%d%d", &a, &b, &c, &r);
    m[0] = a;
    for (int i = 1; i < k; ++i) {
        int64 x = (int64)b;
        x *= m[i - 1];
        x += c;
        x %= r;
        m[i] = (int)x;
        //m[i] = (b * m[i - 1] + c) % r;
    }
    bool flag[N];
    int tmp = k;
    memset(flag, false, sizeof(flag));
    for (int i = k + k; i > k; --i) {
        if (m[i - k - 1] <= k && flag[m[i - k - 1]] == false)
            m[i] = m[i - k - 1];
        else {
            while (flag[tmp])
                tmp--;
            m[i] = tmp;
        }
        flag[m[i]] = true;
    }
    while (flag[tmp])
            tmp--;
    m[k] = tmp;
    printf("%d\n", m[(n - 1 - k) % (k + 1) + k]);
}

int main()
{
    freopen("C:\\Users\\Lee\\Desktop\\fb.in", "r", stdin);
    freopen("D:\\code\\fb.out", "w", stdout);
    int ncase;
    scanf("%d", &ncase);
    getchar();
    for (int icase = 1; icase <= ncase; icase++) {
        printf("Case #%d: ", icase);
        solve_case();
    }
}
