#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <queue>
#include <map>
#include <vector>
#include <string>
#include <cctype>
#include <set>
#include <utility>
#include <stack>
#include <iostream>

using namespace std;

int n;
typedef long long ll;
char ent[10001];

int main (){
	#ifdef INTERNO
		freopen("in", "r", stdin);
		freopen("out", "w", stdout);
	#endif
	int t,p[4];
	scanf("%d", &t); gets(ent);
	for(int _ = 1; _ <= t; ++_){
		gets(ent);
		memset(p, 0, sizeof p);
		bool pode = false;
		for(int i = 0; ent[i]; ++i){
			char z = ent[i];
			if(z == ':') {pode = true; continue;}
			if(z == '(') p[pode]++;
			else if(z == ')'){
				if(pode && p[0] == p[3]);
				else p[2+pode]++;
				if(p[2] > p[0]){
					if(p[2] > p[0]+p[1]) goto fail;
					int d = p[2]-p[0];
					//p[0] += d;
					p[0] = p[2] = 0;
					p[1] -= d;
					p[3] = 0;
				}
				else p[3] = min(p[3], p[0]-p[2]);
			}
			pode = false;
		}
		if(p[0] > p[2]+p[3]){
			fail:
			printf("Case #%d: NO\n", _);
		} else
		printf("Case #%d: YES\n", _);
	}
	return 0;
}
