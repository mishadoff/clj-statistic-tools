#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<memory.h>
#include<cmath>
#include<ctime>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#define abs(x) ((x)<0?-(x):(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define sqr(x) ((x)*(x))
#define getar(m,n) for(int _=0;_<n;++_) cin>>(m)[_];
#define foreach(it,c) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define fill(m,v) memset(m,v,sizeof(m))
#define random(x) (((rand()<<15)+rand())%(x))
#define y1 stupid_cmath
#define y0 stupid_cmath_make_me_cry
#define tm stupid_ctime
#define long long long
using namespace std;

int n,m;
int i,j,k,l;
int a,b,c,r;
const int T = 1<<21;
int p[T];
int t[T];
int w[T], d;

void upd(int i, int x){
	w[i]+=x;
	i+=d;
	t[i] = w[i-d]?m:i-d;
	for(i>>=1;i;i>>=1) t[i] = min(t[i*2],t[i*2+1]);
}

int solve(int k){
	p[0] = a;
	for(i=1;i<n;++i) p[i]=(1LL*p[i-1]*b+c)%r;
	fill(w,0);
	m = n*3+2; 
	for(d=1;d<m;d<<=1);
	for(i=d;i<d+m;++i) t[i] = i-d;
	for(i=d+m;i<d+d;++i) t[i]=m;
	for(i=d-1;i;--i) t[i] = min(t[i*2],t[i*2+1]);
	
	for(i=0;i<n;++i) if(p[i]<m) upd(p[i],1);
	
	for(i=n;i<m;++i){
		j = t[1];
		p[i] = j;
		upd(j,1);
		if(p[i-n]<m) upd(p[i-n],-1);
	}
	
	if(k<n*2+1) return p[k];
	k-=n*2+1; 
	return p[k%(n+1)+n*2+1];
}

int main(){
	freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	
	int tt;
	scanf("%d",&tt);
	for(k=1;k<=tt;++k){
		scanf("%d%d%d%d%d%d",&l,&n,&a,&b,&c,&r);
		printf("Case #%d: %d\n",k,solve(l-1));
	}
	
	return 0;
}
