#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cctype>
#include <vector>
#include <queue>
#include <tr1/unordered_map>
#include <cmath>
#include <map>
#include <bitset>
#include <stack>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef long double real;

///////////////////////////////UTIL/////////////////////////////////
#define ALL(x) (x).begin(),x.end()
#define CLEAR0(v) memset(v, 0, sizeof(v))
#define CLEAR(v, x) memset(v, x, sizeof(v))
#define COPY(a, b) memcpy(a, b, sizeof(a))
#define REP(i,n) for(int i = 0; i<n; i++)
#define REPP(i,a,n) for(int i = a; i<n; i++)
#define REPD(i,n) for(int i = n-1; i>-1; i--)
#define REPDP(i,a,n) for(int i = a; i>-1; i--)
#define pb push_back
#define pf push_front
#define sz size()
#define mp make_pair
/////////////////////////////NUMERICAL//////////////////////////////
#define MOD 100
#define INCMOD(a,b) a = (a+b)%MOD
#define DECMOD(a,b) a = (a+MOD-b)%mod
#define ROUNDINT(a) (int)((double)a + 0.5)
#define INF 2000000000
/////////////////////////////BITWISE////////////////////////////////
#define CHECK(S, j) (S & (1 << j))
#define CHECKFIRST(S) (S & (-S))  //PRECISA DE UMA TABELA PARA TRANSFORMAR EM INDICE
#define SET(S, j) S |= (1 << j)
#define SETALL(S, j) S = (1 << j)-1  //J PRIMEIROS
#define UNSET(S, j) S &= ~(1 << j)
#define TOOGLE(S, j) S ^= (1 << j)
//scanf(" %d ", &t);

char s[2000];
int t;

bool isValid(){
	char last = '.';

	int rl = 0;
	int li[1000];
	int rr = 0;
	int ri[1000];
	
	int p = 0;
	int pi[1000];
	
	int ind;
	
	REP(i, t){
		if(s[i] == '('){
			if(last != ':') pi[p++] = i;
			else li[rl++] = i;
		}
		if(s[i] == ')'){
			if(last != ':'){
				if(p == 0){
					if(rl-- <= 0){
						//cout << "saiu caso 1" << endl;
						return false;
					}
				}
				else p--;
			}
			else ri[rr++] = i;
		}		
		last = s[i];
	}
	while(p-- > 0){
		if(rr-- > 0){
			if(ri[rr] < pi[p]){
				//cout << "saiu caso 2" << endl;
				return false;
			}
		}
		else{
			//cout << "saiu caso 3" << endl;
			return false;
		}
	}
	return true;
}

int main(){
	int tc;
	scanf(" %d ", &tc);

	REP(caso, tc){
		cin.getline(s, 2000);
		t = strlen(s);
		if(isValid()) printf("Case #%d: YES\n", caso+1);
		else printf("Case #%d: NO\n", caso+1);
	}
}
