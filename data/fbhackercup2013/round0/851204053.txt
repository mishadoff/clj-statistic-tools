#!/usr/bin/env python

import string

good = string.ascii_lowercase + ' ' + ':'
f = []


def go( s, a, b ): # s[a,b)

	#print 'go(%d,%d)'%(a,b)

	global good
	global f

	if f[a][b] != None:
		return f[a][b]

	if a >= b: # empty string
		f[a][b] = True
		return True

	if len([ c for c in s[a:b] if c in good ]) == b-a: # single
		f[a][b] = True
		return True

	if a < b-1 and s[a] == '(' and s[b-1] == ')' and go(s,a+1,b-1):
		# (xxx)
		f[a][b] = True
		return True

	for i in range(a+1,b):
		if go(s,a,i) and go(s,i,b):
			f[a][b] = True
			return True

	if b-a == 2 and ( s[a:b] == ':)' or s[a:b] == ':(' ):
		f[a][b] = True
		return True 

	f[a][b] = False
	return False

def main():
	global f
	n = int( raw_input() )
	for x in range(n):
		s = raw_input()

		n = len(s)
		f = [ [None]*(n+1) for i in range(n+1) ]
		res = 'YES' if go(s,0,n) else 'NO'
		#print f

		print 'Case #%d: %s' % ( x+1, res ) 


if __name__ == '__main__':
	main()
