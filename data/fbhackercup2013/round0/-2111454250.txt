#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
using namespace std;
typedef long long ll;
typedef double du;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define FOR(i, s, t) for(i = (s); i < (t); i++)
#define RFOR(i, s, t) for(i = (s)-1; i >= (t); i--)
const int MAXN = 100004;

int a[MAXN*2];
int last[MAXN];
priority_queue<int, vector<int>, greater<int> > q;

int main()
{
    #ifdef __FIO
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    #endif
    int T, i0;
    scanf("%d", &T);
    for(i0 = 1; i0 <= T; i0++){
        int n, k;
        int b, c, r;
        int i, j;
        scanf("%d%d%d%d%d%d", &n, &k, &a[0], &b, &c, &r);
        for(i = 1; i < k; i++)
            a[i] = ((ll)b*a[i-1]+c) % r;
        memset(last, -1, sizeof last);
        for(i = 0; i < k; i++)
            if(a[i] <= k)
                last[a[i]] = i;
        for(i = 0; i <= k; i++)
            if(last[i] == -1)
                q.push(i);
        for(i = 0; i < k; i++)
            if(a[i] <= k && last[a[i]] != i)
                a[i] = k+1;
        for(i = 0; i <= k; i++){
            a[i+k] = q.top();
            q.pop();
            q.push(a[i]);
        }
        while(!q.empty())
            q.pop();
        printf("Case #%d: %d\n", i0, a[(n-1-k)%(k+1)+k]);
    }
    return 0;
}
