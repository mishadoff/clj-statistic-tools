//Template

// By Anudeep :)
//Includes
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;

//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vs;
typedef pair< int ,int > pii;
typedef vector <ll> vll;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)
#define debug 0

//String Utilities 
bool isl(char c) { return (c>='a' && c<='z'); }
bool isu(char c) { return (c>='A' && c<='Z'); }
bool isa(char c) { return (isl(c) || isu(c)); }
bool isn(char c) { return (c>='0' && c<='9'); }
bool isan(char c) { return (isa(c) || isn(c)); }
bool isv(char c) { return (c=='a' || c=='e' || c=='i' || c=='o' || c=='u'); }
string tolow(string s) { rep(i,s.ln) if(isu(s[i])) s[i]=s[i]-'A'+'a'; return s; }
string toup(string s) { rep(i,s.ln) if(isl(s[i])) s[i]=s[i]-'a'+'A'; return s; }

//It all starts here ;)

int main() {
	int t,val,testno=0,times[26],len;
	char s[600];
	scanf("%d",&t);
	getchar();
	// getchar();
	while(t--) {
		gets(s);
		len = strlen(s);
		if(debug) printf("%s\n",s);
		rep(i,len) if(isu(s[i])) s[i]=s[i]-'A'+'a';
		if(debug) printf("%s\n",s);
		rep(i,26) times[i] = 0;
		rep(i,len) if(isa(s[i])) times[s[i]-'a']++;
		if(debug) {
			printf("Before sort\n");
			rep(i,26) printf("%d\n",times[i]);
		}
		sort(times,times+26);
		if(debug) {
			printf("After sort\n");
			rep(i,26) printf("%d\n",times[i]);
		}
		int ans = 0;
		val = 1;
		rep(i,26) ans += (val*times[i]),val++;
		printf("Case #%d: %d\n",++testno,ans);
	}
	return 0;
}