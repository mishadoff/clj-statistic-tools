#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)

char s[1024];
int f[105][105];

int solve(int a,int b)
{
	if (a>b) return 1;
	int &ret=f[a][b];
	if (ret>=0) return ret;
	if ((s[a]>='a' && s[a]<='z' || s[a]==' ' || s[a]==':') && solve(a+1,b)) return ret=1;
	if (s[a]=='(' && s[b]==')' && solve(a+1,b-1)) return ret=1;
	if (b>a && s[a]==':' && (s[a+1]=='(' || s[a+1]==')') && solve(a+2,b)) return ret=1;
	for (int k=a;k<b;k++) if (solve(a,k) && solve(k+1,b)) return ret=1;
	return ret=0;
}
int main()
{
	freopen("B.in","r",stdin);
	freopen("B.out","w",stdout);
	int testcase;
	gets(s);
	sscanf(s,"%d",&testcase);
	for (int case_id=1;case_id<=testcase;case_id++)
	{
		printf("Case #%d: ",case_id);
		gets(s);
		memset(f,255,sizeof(f));
		if (solve(0,strlen(s)-1))
			printf("YES\n");
		else
			printf("NO\n");
	}
	return 0;
}

