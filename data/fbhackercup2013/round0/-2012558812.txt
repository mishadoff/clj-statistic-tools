// Bill Cooperman (aquamongoose)
// 2013 Facebook Hacker Cup - Qualification Round
// Problem 3: "Find the Min"
#include <iostream>
#include <vector>
#include <map>
#include <set>
using namespace std;

typedef unsigned long long ull;

ull N, K, A, B, C, R;
vector <ull> firstk, m;
set <ull> s;
map <ull, ull> freq;

ull solve()
{
    firstk.resize(K);
    m.resize(K+1);
    for (int i=0; i<=K; i++)
        s.insert(i);

    firstk[0] = A;
    s.erase(A);
    freq[A]++;

    for (int i=1; i<K; i++)
    {
        firstk[i] = (B*firstk[i-1]+C)%R;
        s.erase(firstk[i]);
        freq[firstk[i]]++;
    }

    for (int i=0; i<=K; i++)
    {
        m[i] = *s.begin();

        int last;
        if (i < K)
            last = firstk[i];
        else
            last = m[0];

        freq[last]--;
        if (freq[last] == 0 && last <= K)
            s.insert(last);

        s.erase(m[i]);
        freq[m[i]]++;
    }
    return m[(N-K-1)%(K+1)];
}

int main()
{
    int T; cin >> T;
    for (int i=1; i<=T; i++)
    {
        firstk.clear();
        m.clear();
        s.clear();
        freq.clear();
        cin >> N >> K;
        cin >> A >> B >> C >> R;
        cout << "Case #" << i << ": " << solve() << endl;
    }
}
